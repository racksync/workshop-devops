# ไฟล์กำหนดค่า HashiCorp Vault สำหรับการจัดการ secrets อย่างปลอดภัย
apiVersion: v1
kind: Namespace
metadata:
  name: vault
  labels:
    app.kubernetes.io/name: vault
---
# ServiceAccount สำหรับ Vault
apiVersion: v1
kind: ServiceAccount
metadata:
  name: vault
  namespace: vault
  labels:
    app.kubernetes.io/name: vault
---
# ClusterRole สำหรับกำหนดสิทธิ์ให้ Vault
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: vault-server
rules:
- apiGroups: [""]
  resources: ["pods", "services"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods/exec"]
  verbs: ["create"]
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch", "create", "update", "delete"]
---
# การผูก ClusterRole กับ ServiceAccount
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: vault-server-binding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: vault-server
subjects:
- kind: ServiceAccount
  name: vault
  namespace: vault
---
# ConfigMap สำหรับกำหนดค่า Vault
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-config
  namespace: vault
data:
  vault-config.json: |-
    {
      "ui": true,
      "listener": {
        "tcp": {
          "address": "0.0.0.0:8200",
          "tls_disable": 1
        }
      },
      "storage": {
        "file": {
          "path": "/vault/data"
        }
      },
      "default_lease_ttl": "168h",
      "max_lease_ttl": "720h",
      "api_addr": "http://vault.vault:8200",
      "disable_mlock": true
    }
---
# StatefulSet สำหรับรัน Vault Server
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vault
  namespace: vault
  labels:
    app.kubernetes.io/name: vault
spec:
  serviceName: vault
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: vault
  template:
    metadata:
      labels:
        app.kubernetes.io/name: vault
    spec:
      serviceAccountName: vault
      securityContext:
        fsGroup: 1000
        runAsUser: 1000
        runAsGroup: 1000
      containers:
      - name: vault
        image: vault:1.10.0
        args:
        - "server"
        - "-config=/vault/config/vault-config.json"
        securityContext:
          capabilities:
            add:
              - IPC_LOCK
        ports:
        - containerPort: 8200
          name: http
        - containerPort: 8201
          name: https-internal
        env:
        - name: VAULT_ADDR
          value: "http://127.0.0.1:8200"
        - name: VAULT_K8S_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: VAULT_API_ADDR
          value: "http://$(VAULT_K8S_POD_NAME).vault:8200"
        - name: VAULT_CLUSTER_ADDR
          value: "https://$(VAULT_K8S_POD_NAME).vault:8201"
        volumeMounts:
        - name: vault-config
          mountPath: /vault/config
        - name: vault-data
          mountPath: /vault/data
        readinessProbe:
          httpGet:
            path: /v1/sys/health
            port: 8200
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /v1/sys/health?standbyok=true
            port: 8200
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 30
      volumes:
      - name: vault-config
        configMap:
          name: vault-config
  volumeClaimTemplates:
  - metadata:
      name: vault-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi
---
# Service สำหรับให้เข้าถึง Vault
apiVersion: v1
kind: Service
metadata:
  name: vault
  namespace: vault
  labels:
    app.kubernetes.io/name: vault
spec:
  ports:
  - name: http
    port: 8200
    targetPort: 8200
  - name: https-internal
    port: 8201
    targetPort: 8201
  selector:
    app.kubernetes.io/name: vault
